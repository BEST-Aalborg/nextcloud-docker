# ex: set tabstop=8 softtabstop=0 expandtab shiftwidth=2 smarttab:
---
version: '3.5'

services:
  db:
    image: mariadb:latest
    command: >-
      --transaction-isolation=READ-COMMITTED
      --binlog-format=ROW
      --innodb-file-per-table=1
      --skip-innodb-read-only-compressed
      --skip-name-resolve
    restart: always
<<<<<<< HEAD

=======
>>>>>>> 467baad (A lot of changes, but mostly clean-ups)
    volumes:
      - db:/var/lib/mysql
    env_file:
      - .env

<<<<<<< HEAD
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"

=======
>>>>>>> 467baad (A lot of changes, but mostly clean-ups)
  redis:
    image: redis
    restart: always
    command: redis-server --requirepass "${REDIS_HOST_PASSWORD}"

  app:
    build:
      context: ./build/app
      args:
        IMAGE_TAG: "${NEXTCLOUD_VERSION}-${NEXTCLOUD_BRANCH}"

    restart: always
<<<<<<< HEAD

=======
>>>>>>> 467baad (A lot of changes, but mostly clean-ups)
    volumes:
      - nextcloud:/var/www/html
      - apps:/var/www/html/custom_apps
      - config:/var/www/html/config
      - data:/var/www/html/data
<<<<<<< HEAD

    environment:
      MYSQL_HOST: db
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"

      REDIS_HOST: redis
      REDIS_HOST_POST: 6379
      REDIS_HOST_PASSWORD: "${REDIS_HOST_PASSWORD}"

    depends_on:
      - db
      - redis

=======
    env_file:
      - .env
    depends_on:
      - db
      - redis
      
>>>>>>> 467baad (A lot of changes, but mostly clean-ups)
  nginx:
    image: dvaerum/nginx-with-certbot-in-docker:latest
    restart: always
    networks:
      default:
        aliases:
          - "${DOMAIN_NEXTCLOUD}"
          - "${DOMAIN_COLLABORA}"
          - "${DOMAIN_ONLYOFFICE}"

    volumes:
      - ./sites-available:/etc/nginx/sites-available:ro
      - letsencrypt:/etc/letsencrypt
      - nextcloud:/var/www/html
      - apps:/var/www/html/custom_apps
      - config:/var/www/html/config
      - data:/var/www/html/data

    environment:
<<<<<<< HEAD
      DOMAINS: "${DOMAINS}"
      NGINX_LOG_ACCESS: "${NGINX_LOG_ACCESS}"
      NGINX_LOG_ERROR: "${NGINX_LOG_ERROR}"
      PLUGIN_SSL_DISABLE_HEADER: "${PLUGIN_SSL_DISABLE_HEADER}"
      DEBUG_BASH: "${DEBUG_BASH}"

=======
      - DOMAINS=nextcloud.best.aau.dk,collabora.best.aau.dk,onlyoffice.best.aau.dk
      - NGINX_LOG_ACCESS=N
      - NGINX_LOG_ERROR=Y
      - PLUGIN_SSL_DISABLE_HEADER=Strict-Transport-Security X-Frame-Options Content-Security-Policy
#      - DEBUG_BASH=1
>>>>>>> 467baad (A lot of changes, but mostly clean-ups)
    depends_on:
      - app
<<<<<<< HEAD
=======

    ### NOTES for labels: ###
    # These labels are used to configure the container Traefik (https://doc.traefik.io/traefik/).
    # Traefik is used as our LB (Load Balander) for handling incoming connection and forward them
    # to the correct containers.
    labels:
      # Enable this container to be load balancered by Traefik
      - "traefik.enable=true"

      # Select the endpoint from Traefik there which is used from incoming connection. Normally the endpoint `web`
      # is going to be on port 80 (HTTP).
      - "traefik.http.routers.nextcloud_http.entrypoints=web"
      # List of all the domains there will forwarded to this container
      - "traefik.http.routers.nextcloud_http.rule=Host(`nextcloud.best.aau.dk`, `collabora.best.aau.dk`, `onlyoffice.best.aau.dk`)"
      # In order to select which port on this container the connections from Traefik should be farwarded to,
      # there needs to be defined a service.
      - "traefik.http.routers.nextcloud_http.service=nextcloud_http"
      # This service defineds that we load balancer should farward connections to port 80
      - "traefik.http.services.nextcloud_http.loadbalancer.server.port=80"

      # Select the endpoint from Traefik there which is used from incoming connection. Normally the endpoint `websecure`
      # is going to be on port 443 (HTTPS).
      - "traefik.tcp.routers.nextcloud_https.entrypoints=websecure"
      # List of all the domains there will forwarded to this container
      - "traefik.tcp.routers.nextcloud_https.rule=HostSNI(`nextcloud.best.aau.dk`, `collabora.best.aau.dk`, `onlyoffice.best.aau.dk`)"
      # By default traefik will handle the encryption of connections and just forward the connection unencrypted,
      # but if you instead just want Traefik to forward the encrypted connection to the container,
      # set `tls.passthrough` to `true`.
      - "traefik.tcp.routers.nextcloud_https.tls.passthrough=true"
      # To order to select which port on this container the connections from Traefik should be farwarded to,
      # there needs to be defined a service.
      - "traefik.tcp.routers.nextcloud_https.service=nextcloud_https"
      # This service defineds that we load balancer should farward connections to port 80
      - "traefik.tcp.services.nextcloud_https.loadbalancer.server.port=443"

>>>>>>> 2cb54f3 (Setup Nextcloud to use traefik)

<<<<<<< HEAD
    ### NOTES for labels: ###
    # These labels are used to configure the container Traefik (https://doc.traefik.io/traefik/).
    # Traefik is used as our LB (Load Balander) for handling incoming connection and forward them
    # to the correct containers.
    labels:
      # Enable this container to be load balancered by Traefik
      - "traefik.enable=true"

      # Select the endpoint from Traefik there which is used from incoming connection. Normally the endpoint `web`
      # is going to be on port 80 (HTTP).
      - "traefik.http.routers.nextcloud_http.entrypoints=web"
      # List of all the domains there will forwarded to this container
      - "traefik.http.routers.nextcloud_http.rule=Host(`${DOMAIN_NEXTCLOUD}`, `${DOMAIN_COLLABORA}`, `${DOMAIN_ONLYOFFICE}`)"
      # In order to select which port on this container the connections from Traefik should be farwarded to,
      # there needs to be defined a service.
      - "traefik.http.routers.nextcloud_http.service=nextcloud_http"
      # This service defineds that we load balancer should farward connections to port 80
      - "traefik.http.services.nextcloud_http.loadbalancer.server.port=80"

      # Select the endpoint from Traefik there which is used from incoming connection. Normally the endpoint `websecure`
      # is going to be on port 443 (HTTPS).
      - "traefik.tcp.routers.nextcloud_https.entrypoints=websecure"
      # List of all the domains there will forwarded to this container
      - "traefik.tcp.routers.nextcloud_https.rule=HostSNI(`${DOMAIN_NEXTCLOUD}`, `${DOMAIN_COLLABORA}`, `${DOMAIN_ONLYOFFICE}`)"
      # By default traefik will handle the encryption of connections and just forward the connection unencrypted,
      # but if you instead just want Traefik to forward the encrypted connection to the container,
      # set `tls.passthrough` to `true`.
      - "traefik.tcp.routers.nextcloud_https.tls.passthrough=true"
      # To order to select which port on this container the connections from Traefik should be farwarded to,
      # there needs to be defined a service.
      - "traefik.tcp.routers.nextcloud_https.service=nextcloud_https"
      # This service defineds that we load balancer should farward connections to port 80
      - "traefik.tcp.services.nextcloud_https.loadbalancer.server.port=443"

#  collabora:
#    image: collabora/code:latest
#    restart: unless-stopped
#    cap_add:
#      - MKNOD
#    environment:
#      # domain: "${DOMAIN_NEXTCLOUD}"
#      aliasgroup1: "https://${DOMAIN_NEXTCLOUD},http://${DOMAIN_NEXTCLOUD},https://${DOMAIN_NEXTCLOUD}:443,http://${DOMAIN_NEXTCLOUD}:80"

  onlyoffice:
    ### READ The onlyoffice/Dockerfile for more info!
    build: ./build/onlyoffice
=======
  collabora:
    image: collabora/code:latest
    restart: unless-stopped
    cap_add:
      - MKNOD
    environment:
      - domain=nextcloud.best.aau.dk

  onlyoffice:
#    image: onlyoffice/documentserver:latest
    ### READ The onlyoffice/Dockerfile for more info!
<<<<<<< HEAD
    build: onlyoffice
>>>>>>> 467baad (A lot of changes, but mostly clean-ups)
=======
    build: ./build/onlyoffice
>>>>>>> 37336fd (Moved container builds into the build folder)
    restart: always
    stdin_open: true
    tty: true

    environment:
      JWT_ENABLED: "false"

    volumes:
      - document_data:/var/www/onlyoffice/Data
      - document_log:/var/log/onlyoffice

  elasticsearch:
    build:
      context: ./build/elasticsearch
      args:
        IMAGE_TAG: "${ELASTIC_SEARCH_VERSION}"
    restart: always
<<<<<<< HEAD
    environment:
      discovery.type: single-node
      # ES_JAVA_OPTS: -Xms1024m -Xmx1024m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
=======
>>>>>>> 467baad (A lot of changes, but mostly clean-ups)

volumes:
  nextcloud:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/nextcloud

  apps:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/apps

  config:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/config

  data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/data

  db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/database

  document_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/doc_data

  document_log:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/doc_log

  letsencrypt:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/letsencrypt

<<<<<<< HEAD
<<<<<<< HEAD
  elasticsearch_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/nextcloud/elasticsearch
=======
>>>>>>> 467baad (A lot of changes, but mostly clean-ups)

=======
>>>>>>> 2cb54f3 (Setup Nextcloud to use traefik)
